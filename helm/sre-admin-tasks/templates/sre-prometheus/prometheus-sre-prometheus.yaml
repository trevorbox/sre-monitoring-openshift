---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: {{ .Values.prometheus.name }}
  labels:
    prometheus: {{ .Values.prometheus.name }}
  namespace: {{ .Release.Namespace }}
spec:
  volumes:
    - name: istio-certs
      emptyDir:
        medium: Memory
    - name: istiod-ca-cert
      configMap:
        name: istio-ca-root-cert
        defaultMode: 420
    - name: istio-envoy
      emptyDir:
        medium: Memory
    - name: istio-config-volume
      configMap:
        name: istio-basic-install
        defaultMode: 420
        optional: true
  resources:
    requests:
      memory: 256Mi
      cpu: 300m
  retention: 30d
  #On average, Prometheus uses only around 1-2 bytes per sample. Thus, to plan the capacity of a Prometheus server, you can use the rough formula:
  #needed_disk_space = retention_time_seconds * ingested_samples_per_second * bytes_per_sample
  #rate(prometheus_tsdb_head_samples_appended_total[1h]) gives an indication of samples per second
  #see https://www.robustperception.io/how-much-disk-space-do-prometheus-blocks-use
  #~4Gi = 2592000 * 780 * 2
  storage:
    volumeClaimTemplate:
      spec:
        storageClassName: gp2
        resources:
          requests:
            storage: 10Gi
  logLevel: debug
  podMetadata:
    labels:
      maistra.io/expose-route: 'true'
  secrets:
    - prometheus-k8s-tls
    - prometheus-k8s-proxy
    #- istio-certs
  configMaps:
    - serving-certs-ca-bundle
    - trusted-ca-bundle   
  containers:
    - args:
        - '--web.console.templates=/etc/prometheus/consoles'
        - '--web.console.libraries=/etc/prometheus/console_libraries'
        - '--config.file=/etc/prometheus/config_out/prometheus.env.yaml'
        - '--storage.tsdb.path=/prometheus'
        - '--storage.tsdb.retention.time=30d'
        - '--web.enable-lifecycle'
        - '--storage.tsdb.no-lockfile'
        - '--web.route-prefix=/'
        - '--log.level=debug'
        - '--discovery.member-roll-name=default'
        - '--discovery.member-roll-namespace={{ .Values.istio_control_plane.namespace }}'
      name: prometheus
      volumeMounts:
        - name: istio-certs
          mountPath: /etc/istio-certs/
    - args:
        - '-provider=openshift'
        - '-pass-basic-auth=false'
        - '-https-address=:9091'
        - '-http-address='
        - '-email-domain=*'
        - '-upstream=http://localhost:9090'
        - '-openshift-sar={"namespace":"{{ .Release.Namespace }}","resource":"services","verb":"list"}'
        - '-openshift-delegate-urls={"/": {"namespace":"{{ .Release.Namespace }}","resource":"services","verb":"list"}}'
        - '-tls-cert=/etc/tls/private/tls.crt'
        - '-tls-key=/etc/tls/private/tls.key'
        - '-client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token'
        - '-cookie-secret-file=/etc/proxy/secrets/session_secret'
        - '-openshift-service-account=sre-prometheus'
        - '-openshift-ca=/etc/configmap/trusted-ca-bundle/ca-bundle.crt'
        - '-openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
        - '-skip-auth-regex=^/metrics'
      image: 'quay.io/openshift/origin-oauth-proxy:4.6'
      name: prometheus-proxy
      ports:
        - containerPort: 9091
          name: proxy
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
        - mountPath: /etc/tls/private
          name: secret-prometheus-k8s-tls
        - mountPath: /etc/proxy/secrets
          name: secret-prometheus-k8s-proxy
        - mountPath: /etc/configmap/trusted-ca-bundle
          name: configmap-trusted-ca-bundle
          readOnly: true
    - resources: {}
      readinessProbe:
        httpGet:
          path: /healthz/ready
          port: 15020
          scheme: HTTP
        initialDelaySeconds: 1
        timeoutSeconds: 1
        periodSeconds: 2
        successThreshold: 1
        failureThreshold: 30
      terminationMessagePath: /dev/termination-log
      name: istio-proxy
      env:
        - name: OUTPUT_CERTS
          value: /etc/istio-certs
        - name: JWT_POLICY
          value: first-party-jwt
        - name: PILOT_CERT_PROVIDER
          value: istiod
        - name: CA_ADDR
          value: 'istiod-basic-install.istio-system.svc:15012'
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.serviceAccountName
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: ISTIO_META_MESH_ID
          value: cluster.local
        - name: ISTIO_META_CLUSTER_ID
          value: Kubernetes
      ports:
        - name: http-envoy-prom
          containerPort: 15090
          protocol: TCP
      imagePullPolicy: Always
      volumeMounts:
        - name: istiod-ca-cert
          mountPath: /var/run/secrets/istio
        - name: istio-envoy
          mountPath: /etc/istio/proxy
        - name: istio-certs
          mountPath: /etc/istio-certs/
        - name: istio-config-volume
          mountPath: /etc/istio/config
      terminationMessagePolicy: File
      image: >-
        registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:0caf9b891ee75f26e4bf2ac9274c7578da5786305e6987a6a4163c5173bf243e
      args:
        - proxy
        - sidecar
        - '--domain'
        - $(POD_NAMESPACE).svc.cluster.local
        - istio-proxy-prometheus
        - '--proxyLogLevel=warning'
        - '--proxyComponentLogLevel=misc:error'
        - '--controlPlaneAuthPolicy'
        - NONE
        - '--trust-domain=cluster.local'
  replicas: 2
  serviceAccountName: {{ .Values.prometheus.name }}
  serviceMonitorSelector: {}
  alerting:
    alertmanagers:
      - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
        name: alertmanager-k8s
        namespace: {{ .Release.Namespace }}
        port: proxy
        scheme: https
        tlsConfig:
          ca: {}
          caFile: /etc/prometheus/configmaps/serving-certs-ca-bundle/service-ca.crt
          cert: {}
          serverName: alertmanager-k8s.{{ .Release.Namespace }}.svc
  additionalScrapeConfigs:
    name: {{ .Values.prometheus.name }}-additional-scrape-configs
    key: prometheus-additional.yaml
  baseImage: registry.redhat.io/openshift-service-mesh/prometheus-rhel8
  sha: 70960efc418688d96d6e9b1ee8a35905ce221cb08d9e5aefff9616e44b95cd9f
  ruleSelector:
    matchLabels: 
      role: alert-rules
      prometheus: {{ .Values.prometheus.name }}
  serviceMonitorSelector: 
    matchLabels: 
      sre-monitoring: "true"
  podMonitorSelector:
    matchLabels:
      sre-monitoring: "true"
  #ruleNamespaceSelector:
    #matchLabels:
      #maistra.io/member-of: {{ .Values.istio_control_plane.namespace }}
      #kiali.io/member-of: {{ .Values.istio_control_plane.namespace }}
  serviceMonitorNamespaceSelector:
    matchLabels:
      maistra.io/member-of: {{ .Values.istio_control_plane.namespace }}
  podMonitorNamespaceSelector:
    matchLabels:
      maistra.io/member-of: {{ .Values.istio_control_plane.namespace }}
